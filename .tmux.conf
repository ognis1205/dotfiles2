# ────────────────────────────────
# Custom key bindings and behavior
# ────────────────────────────────

# Change prefix from C-b to C-z for convenience
unbind-key C-b
set-option -g prefix C-z
bind-key C-z send-prefix

# Alternative prefix keys (commented out)
#set -g prefix C-q
#unbind-key C-b
#bind-key C-q send-prefix
#set -g prefix C-x

# Disable mouse support for consistent behavior
set -g mouse off

# Reload configuration with 'C-x r'
bind C-x send-prefix
bind r source-file ~/.tmux.conf \; display "~/.tmux.conf reloaded"

# Set window and pane numbering to start at 1
set -g base-index 1
setw -g pane-base-index 1

# Resize panes with Alt + Arrow keys
bind -r M-Up resize-pane -U 5
bind -r M-Down resize-pane -D 5
bind -r M-Left resize-pane -L 5
bind -r M-Right resize-pane -R 5

# Enter copy mode with Alt + [ and paste with Alt + ]
bind -n M-[ copy-mode
bind -n M-] paste-buffer

# Improve navigation in copy mode using Ctrl + ← / →
bind -T copy-mode C-Left send-keys -X previous-word
bind -T copy-mode C-Right send-keys -X next-word-end

# Open a new window in ~/.tmux.d/ with Alt + T
bind -n M-T new-window -n tmux-conf -c ~/.tmux.d/

# Toggle synchronize-panes with 'Y'
bind Y setw synchronize-panes \; if-shell \
  "tmux showw -v synchronize-panes | grep on"\
  "display 'synchronize-panes on'" \
  "display 'synchronize-panes off'"

# Toggle monitor-activity with 'a'
bind a setw monitor-activity \; if-shell \
  "tmux showw -v monitor-activity | grep on" \
  "display 'monitor-activity on'" \
  "display 'monitor-activity off'"

# Rename current window with 'W'
bind W command-prompt "rename-window '%%'"

# Choose buffer with 'b'
bind b choose-buffer

# ────────────────────────────────
# Emacs-style key bindings
# ────────────────────────────────

# Use Emacs-style keybindings for status line and copy mode
set -g status-keys emacs
setw -g mode-keys emacs

# Bind Meta+x and Meta+: to open the command prompt
bind -n M-x command-prompt
bind -n M-: command-prompt

# Send Meta+x and Meta+: keys (for running Emacs commands)
bind M-x send-keys "M-x"
bind M-: send-keys "M-:"

# Press 'g' to run `git diff` in the current pane's directory,
# open output in a new window with pager, or show error if not a git repo
bind g if-shell \
  "cd #{pane_current_path} && git diff" \
  "new-window -n git-diff -c '#{pane_current_path}' '( git diff --color=always --ignore-space-change --ignore-all-space && echo && git -c status.color=always status ) | less -r'"\
  "display 'Not a git repository.'"

# Press '0' to kill the current pane if there are multiple panes,
# otherwise display a warning message
bind 0 if-shell \
  "tmux display-message -p '#{window_panes}' | grep -v '^1$'"\
  "kill-pane"\
  "display 'Attempt to delete sole ordinary panel'"

# Press '1' to close all panes except the current one
bind 1 run-shell \
  "tmux list-panes | grep -o '%[[:digit:]]\\+' | xargs -I{} sh -c 'if [ #D != {} ]; then tmux kill-pane -t {}; fi'"

# Press '2' to split the window vertically, preserving current directory
bind 2 split-window -v -c "#{pane_current_path}"

# Press '3' to split the window horizontally, preserving current directory
bind 3 split-window -h -c "#{pane_current_path}"

# Press 'k' to confirm before killing the current pane
bind k confirm-before -p "kill-pane '#W:#P'? (y/n)" kill-pane

# Press Ctrl-b to open the window chooser tree
bind C-b choose-tree -w

# Press Ctrl-b to enter the SWITCHWINDOW mode
bind -n C-b switch-client -T SWITCHWINDOW

# In SWITCHWINDOW mode, press 0-9 to switch to the corresponding window
bind -T SWITCHWINDOW 0 select-window -t :=0
bind -T SWITCHWINDOW 1 select-window -t :=1
bind -T SWITCHWINDOW 2 select-window -t :=2
bind -T SWITCHWINDOW 3 select-window -t :=3
bind -T SWITCHWINDOW 4 select-window -t :=4
bind -T SWITCHWINDOW 5 select-window -t :=5
bind -T SWITCHWINDOW 6 select-window -t :=6
bind -T SWITCHWINDOW 7 select-window -t :=7
bind -T SWITCHWINDOW 8 select-window -t :=8
bind -T SWITCHWINDOW 9 select-window -t :=9

# ────────────────────────────────
# Help mode key bindings
# ────────────────────────────────

# Press Ctrl-h to enter Help mode and display a brief message
bind -n C-h switch-client -T HELP \; display "C-h (Type ? for further options)-"

# In Help mode:
# k - list all key bindings
bind -T HELP k list-keys
# c - open new window with tmux Commands man page at 'COMMANDS' section
bind -T HELP c new-window -n 'Commands' "man -P 'less -p ^COMMANDS' tmux"
# v - open new window with tmux Variables man page at 'Variable name' section
bind -T HELP v new-window -n 'Variables' "man -P 'less -p \"Variable name\"' tmux"
# F - open new window with tmux Formats man page at 'FORMATS' section
bind -T HELP F new-window -n 'Formats' "man -P 'less -p ^FORMATS' tmux"
# h - open new window with tmux Hooks man page at 'HOOKS' section
bind -T HELP h new-window -n 'Hooks' "man -P 'less -p ^HOOKS' tmux"
# H - show all hooks in tmux
bind -T HELP H show-hooks -g
# e - open new window with tmux Environment man page at 'ENVIRONMENT' section
bind -T HELP e new-window -n 'Environment' "man -P 'less -p ^ENVIRONMENT' tmux"
# E - show tmux environment variables
bind -T HELP E showenv
# g - show global tmux environment variables
bind -T HELP g showenv -g
# o - show tmux options
bind -T HELP o show-options
# O - show global tmux options
bind -T HELP O show-options -g
# w - show window options
bind -T HELP w show-window-options
# W - show global window options
bind -T HELP W show-window-options -g
# m - open new window with full tmux man page
bind -T HELP m new-window -n 'tmux man page' "man tmux"
# ? - open new window displaying generated help page from custom script
bind -T HELP ? switch-client -T HELP \; new-window -n 'Help Page' "~/.tmux.d/help_doc_gen.py ~/.tmux.conf | less"
# q - quit Help mode by sending 'q' if current window is 'Help Page'
bind -T HELP q if-shell "echo #W | grep 'Help Page'" "send-keys q"

# ────────────────────────────────
# Style settings
# ────────────────────────────────

# Set maximum length of left status segment
set -g status-left-length 20

# Enable xterm keys for better key handling in some terminals
set-window-option -g xterm-keys on

# Use 256-color xterm terminal type for better color support
set -g default-terminal "xterm-256color"

# Set status bar foreground to black and background to default terminal background
set -g status-style fg=black,bg=default

# Set inactive window status foreground color to cyan
setw -g window-status-style fg=cyan

# Set active window status foreground color to magenta
setw -g window-status-current-style fg=magenta

# Set copy mode style: blue background with white foreground
setw -g mode-style bg=blue,fg=white

# Set message style to default background and foreground with bright attribute
set-option -g message-style bg=default,fg=default,bright

# ────────────────────────────────
# Misc settings
# ────────────────────────────────

# Set message display time (in milliseconds)
set -g display-time 2000