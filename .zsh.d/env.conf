# ────────────────────────────────
# Prompt setup
# ────────────────────────────────

# Use 'pure' prompt if available, otherwise fallback to basic VCS-aware prompt
if [ -d "${HOME}/.zsh/pure" ] ; then
    fpath+="${HOME}/.zsh/pure"
    autoload -U promptinit
    promptinit
    prompt pure
else
    autoload -U colors && colors
    autoload -Uz vcs_info
    autoload -Uz add-zsh-hook
    function __battery() {
        local percent power color reset="%f"
        local bar=""
        case "$(uname 2> /dev/null)" in
            Darwin*)
                percent=$(pmset -g batt | grep -Eo "\d+%" | head -1 | tr -d "%")
                if [[ $(pmset -g ac) == *"No adapter attached."* ]]; then
                    power="%F{yellow}⇆${reset}"
                else
                    power="%F{green}⎓${reset}"
                fi
                ;;
            Linux*)
                percent=$(acpi -b 2>/dev/null | grep -Eo "[0-9]+%" | head -1 | tr -d "%")
                if acpi -a 2>/dev/null | grep -q "on-line"; then
                    power="%F{green}⎓${reset}"
                else
                    power="%F{yellow}⇆${reset}"
                fi
                ;;
            *)
                echo "⚠ no battery info"
                return
                ;;
        esac
        if (( percent > 50 )); then
            color="%F{green}"
        elif (( percent > 25 )); then
            color="%F{yellow}"
        else
            color="%F{red}"
        fi
        local level=1
        if (( percent >= 75 )); then
            level=4
        elif (( percent >= 50 )); then
            level=3
        elif (( percent >= 25 )); then
            level=2
        fi
        local bar=""
        for (( i=1; i<=4; i++ )); do
            if (( i <= level )); then
                bar+="${color}■${reset}"
            else
                bar+="${color}□${reset}"
            fi
        done
        echo "${power} ${bar} ${color}${percent}%%${reset} "
    }
    function __venv() {
        local venv=""
        if [[ -n "${VIRTUAL_ENV}" ]]; then
            venv=" %F{cyan}($(basename "$VIRTUAL_ENV"))%f"
        fi
	echo "${venv}"
    }
    PROMPT="[$(__battery)%n@%m$(__venv)] %~"$'\n'"%(#.#.$) "
    zstyle ':vcs_info:*' formats '%F{green}(%s)-[%b]%f'
    zstyle ':vcs_info:*' actionformats '%F{red}(%s)-[%b|%a]%f'
    function __render_prompt() {
        PROMPT="[$(__battery)%n@%m$(__venv)] %~"$'\n'"%(#.#.$) "
    }
    function __update_vcs_info_msg() {
        LANG=en_US.UTF-8 vcs_info
        RPROMPT="${vcs_info_msg_0_}"
    }
    add-zsh-hook precmd __render_prompt
    add-zsh-hook precmd __update_vcs_info_msg
fi

# ────────────────────────────────
# Environment variables
# ────────────────────────────────

export EDITOR=/usr/bin/vim # Default editor
export BLOCKSIZE=1k        # Disk block size (e.g. used in df/du)
export LC_ALL=en_US.UTF-8  # Locale setting (override all)
export LANG=en_US.UTF-8    # General locale

# ────────────────────────────────
# Terminal colors (non-macOS)
# ────────────────────────────────

if [ "$(uname 2> /dev/null)" != Darwin ]; then
    export CLICOLOR=1                          # Enable colored output
    export LSCOLORS=ExFxBxDxCxegedabagacad     # Define color scheme for 'ls'
fi

# ────────────────────────────────
# Homebrew paths
# ────────────────────────────────

export HOMEBREW_PREFIX="/opt/homebrew"
export HOMEBREW_CELLAR="/opt/homebrew/Cellar"
export HOMEBREW_REPOSITORY="/opt/homebrew"
fpath[1,0]="/opt/homebrew/share/zsh/site-functions" # Add Homebrew site-functions to fpath

# ────────────────────────────────
# PATH setup
# ────────────────────────────────

__path=(
  /opt/homebrew/bin
  /opt/homebrew/sbin
  ${HOME}/.local/bin
  /usr/local/bin
  /usr/local/sbin
  /usr/bin
  /bin
  /usr/sbin
  /sbin
  /System/Cryptexes/App/usr/bin
  /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin
  /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin
  /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin
)
export PATH="${(j|:|)__path}"
unset __path
[ -z "${MANPATH-}" ] || export MANPATH=":${MANPATH#:}"
export INFOPATH="/opt/homebrew/share/info:${INFOPATH:-}"
